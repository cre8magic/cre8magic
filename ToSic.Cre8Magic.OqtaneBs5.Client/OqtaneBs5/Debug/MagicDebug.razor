@using System.Text.Json
@using System.Text.Json.Serialization
@using System.Text.Encodings.Web
@using Oqtane.UI
@using ToSic.Cre8magic.Act
@using ToSic.Cre8magic.Internal.Debug
@using ToSic.Cre8magic.Settings.Internal

@namespace ToSic.Cre8magic.OqtaneBs5
@inherits ComponentBase

@inject IMagicSettingsService SettingsService
@inject IMagicAct MagicAct
@code {
    [CascadingParameter] public required PageState PageState { get; set; }
    [Parameter, EditorRequired] public required IHasDebugInfo Target { get; set; }
}
@{
    var debugInfo = Target.GetDebugInfo();
    var settings = debugInfo.Settings;
    var shouldSHow = SettingsService.Debug.GetStable().Show(PageState);

    // Exit early if debug is not allowed
    if (!shouldSHow)
        return;
}
@{
    var more = debugInfo.More;

    JsonSerializerOptions jsonOptions = new()
    {
        WriteIndented = true, 
        DefaultIgnoreCondition = JsonIgnoreCondition.WhenWritingNull,
        Encoder = JavaScriptEncoder.UnsafeRelaxedJsonEscaping
    };
}
<!-- Link to trigger open modal - shows bug-emoji -->
<a href="#debug-@settings?.GetHashCode()" data-bs-toggle="modal">
    <text>🪲</text>
</a>

<!-- Modal -->
@* info to the next developer: data-backdrop=false helps avoid certain z-index issues if this debug is used in the menu etc. which has a z-index *@
<div class="modal fade" id="debug-@settings?.GetHashCode()" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="false">
    <div class="modal-dialog modal-dialog-scrollable modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">@(debugInfo.Title ?? "Debug")</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @* Show Values *@
                @if (debugInfo.Values != null)
                {
                    <ul>
                        @foreach (var valuePair in debugInfo.Values)
                        {
                            <li>@valuePair.Key: @valuePair.Value </li>
                        }
                    </ul>
                    <hr/>
                }

                @foreach (var data in more.Where(m => m.Value != default))
                {
                    <h4>@data.Key</h4>
                    <pre>@JsonSerializer.Serialize(data.Value, jsonOptions)</pre>
                }
            </div>
        </div>
    </div>
</div>
