@using ToSic.Cre8magic.Pages.Internal
@inherits ThemeControlBase
@inject IMagicPageService PageSvc

@{
    var currentPage = PageSvc.GetCurrent(PageState);
}

<h1>Magic Pages Service</h1>
<hr/>

<h2>Basic Get Current, Home, etc.</h2>

<ol>
    <li>Current Page: @currentPage</li>
    <li>Home Page: @PageSvc.GetHome(PageState)</li>
    <li>Current Page Parent: @currentPage.Parent</li>
    <li>Current page using GetPage: @PageSvc.GetPage(PageState, PageState.Page)</li>
    <li>Current page using GetPage: @PageSvc.GetPage(PageState, PageState.Page.PageId)</li>
    <li>Current page using GetPage: @PageSvc.GetPage(PageState, currentPage.Id)</li>
</ol>

<h2>Current page properties</h2>
<ol>
    <li>Id: @currentPage.Id</li>
    <li>Path: @currentPage.Path</li>
    <li>Name: @currentPage.Name</li>
    <li>Parent: @currentPage.Parent</li>
    @*         <li>Children: @currentPage.Children</li>
    <li>Is Home: @currentPage.IsHome</li>
*@
    <li>Is Current: @currentPage.IsActive</li>
    <li>Is In Breadcrumb: @currentPage.IsInBreadcrumb</li>
    @* <li>Is Parent: @currentPage.IsParent</li>
    <li>Is Child: @currentPage.IsChild</li>
    <li>Is Ancestor: @currentPage.IsAncestor</li>
    <li>Is Descendant: @currentPage.IsDescendant</li>
    <li>Is Hidden: @currentPage.IsHidden</li>
    <li>Is System: @currentPage.IsSystem</li>
    <li>Is Published: @currentPage.IsPublished</li>
    <li>Is Deleted: @currentPage.IsDeleted *@
</ol>

<h2>Get Many</h2>

<ol>
    @foreach(var aPage in PageSvc.GetPages(PageState, [currentPage.Id, PageSvc.GetHome(PageState).Id]))
    {
        <li>@aPage</li>
    }
</ol>
